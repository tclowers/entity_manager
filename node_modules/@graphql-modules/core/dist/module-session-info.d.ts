import { GraphQLModule } from './graphql-module';
import { ModuleContext } from './types';
export declare class ModuleSessionInfo<Config = any, Session extends object = any, Context = any> {
    private _module;
    private _session;
    constructor(_module: GraphQLModule<Config, Session, Context>, _session: Session);
    get module(): GraphQLModule<Config, Session, Context, Partial<{
        [key: string]: (() => any) | import("graphql").GraphQLScalarType | import("graphql-tools").IEnumResolver | Partial<import("graphql-tools").IResolverObject<any, ModuleContext<Context>, any>> | import("graphql-tools").IResolverOptions<any, ModuleContext<Context>, any>;
    }>>;
    get session(): Session;
    get cache(): import("apollo-server-caching").KeyValueCache<string>;
    context: ModuleContext<Context>;
    get injector(): import("@graphql-modules/di").Injector<Session>;
    get injectorAsync(): Promise<import("@graphql-modules/di").Injector<Session>>;
    get config(): Config;
    get name(): string;
}
